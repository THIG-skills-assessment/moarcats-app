name: CI/CD

on:
  schedule:
    # schedule for 0242 every sunday
    - cron: '42 2 * * 0'
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    name: Build and upload to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup docker buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Cache docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Docker buildx (build)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moarcats
        run: |
          image_tag="$(date +%Y%m%d%H%M%S)-$(echo ${{ github.sha }} | cut -c1-6)"
          echo "::set-env name=IMAGE_TAG::$image_tag"
          docker buildx build \
              --cache-from "type=local,src=/tmp/.buildx-cache" \
              --cache-to "type=local,dest=/tmp/.buildx-cache" \
              --platform linux/amd64,linux/arm/v7 \
              --output "type=image,push=false" \
              --tag $ECR_REGISTRY/$ECR_REPOSITORY:$image_tag \
              --file ./Dockerfile ./

      - name: Docker buildx (push)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moarcats
        run: |
          docker buildx build \
              --cache-from "type=local,src=/tmp/.buildx-cache" \
              --platform linux/amd64,linux/arm/v7 \
              --output "type=image,push=true" \
              --tag $ECR_REGISTRY/$ECR_REPOSITORY:$image_tag \
              --file ./Dockerfile ./

      - name: Docker check manifest
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moarcats
        run: |
          docker run --rm mplatform/mquery $ECR_REGISTRY/$ECR_REPOSITORY:$image_tag

      - name: Tag latest docker image if on master
        if: github.ref == 'refs/heads/master'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moarcats
        run: |
          docker buildx build \
              --cache-from "type=local,src=/tmp/.buildx-cache" \
              --platform linux/amd64,linux/arm/v7 \
              --output "type=image,push=true" \
              --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest \
              --file ./Dockerfile ./

      - name: Log the tag name
        if: github.ref != 'refs/heads/master'
        run: |
          echo "Would have tagged image ${{ env.IMAGE_TAG }} as latest, if we were on the master branch."

      - name: Logout of AWS ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
